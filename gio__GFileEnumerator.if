
struct                    GFileEnumerator;
inherit           gobject.GObject;

GFileInfo *         g_file_enumerator_next_file         (GFileEnumerator *enumerator,
                                                         GCancellable *cancellable,
                                                         GError **error);
gboolean            g_file_enumerator_close             (GFileEnumerator *enumerator,
                                                         GCancellable *cancellable,
                                                         GError **error);
void                g_file_enumerator_next_files_async  (GFileEnumerator *enumerator,
                                                         int num_files,
                                                         int io_priority,
                                                         GCancellable *cancellable,
                                                         GAsyncReadyCallback callback,
                                                         gpointer user_data);
GList *             g_file_enumerator_next_files_finish (GFileEnumerator *enumerator,
                                                         GAsyncResult *result,
                                                         GError **error);
void                g_file_enumerator_close_async       (GFileEnumerator *enumerator,
                                                         int io_priority,
                                                         GCancellable *cancellable,
                                                         GAsyncReadyCallback callback,
                                                         gpointer user_data);
gboolean            g_file_enumerator_close_finish      (GFileEnumerator *enumerator,
                                                         GAsyncResult *result,
                                                         GError **error);
gboolean            g_file_enumerator_is_closed         (GFileEnumerator *enumerator);
gboolean            g_file_enumerator_has_pending       (GFileEnumerator *enumerator);
void                g_file_enumerator_set_pending       (GFileEnumerator *enumerator,
                                                         gboolean pending);
GFile *             g_file_enumerator_get_container     (GFileEnumerator *enumerator);