
struct              GtkLabel;
inherit gtk3.GtkMisc;

GtkWidget *         gtk_label_new                       (const gchar *str);
void                gtk_label_set_text                  (GtkLabel *label,
                                                         const gchar *str);
void                gtk_label_set_attributes            (GtkLabel *label,
                                                         PangoAttrList *attrs);
void                gtk_label_set_markup                (GtkLabel *label,
                                                         const gchar *str);
void                gtk_label_set_markup_with_mnemonic  (GtkLabel *label,
                                                         const gchar *str);
void                gtk_label_set_pattern               (GtkLabel *label,
                                                         const gchar *pattern);
void                gtk_label_set_justify               (GtkLabel *label,
                                                         GtkJustification jtype);
void                gtk_label_set_ellipsize             (GtkLabel *label,
                                                         PangoEllipsizeMode mode);
void                gtk_label_set_width_chars           (GtkLabel *label,
                                                         gint n_chars);
void                gtk_label_set_max_width_chars       (GtkLabel *label,
                                                         gint n_chars);
void                gtk_label_set_line_wrap             (GtkLabel *label,
                                                         gboolean wrap);
void                gtk_label_set_line_wrap_mode        (GtkLabel *label,
                                                         PangoWrapMode wrap_mode);
void                gtk_label_get_layout_offsets        (GtkLabel *label,
                                                         gint *x,
                                                         gint *y);
guint               gtk_label_get_mnemonic_keyval       (GtkLabel *label);
gboolean            gtk_label_get_selectable            (GtkLabel *label);
const gchar *       gtk_label_get_text                  (GtkLabel *label);
GtkWidget *         gtk_label_new_with_mnemonic         (const gchar *str);
void                gtk_label_select_region             (GtkLabel *label,
                                                         gint start_offset,
                                                         gint end_offset);
void                gtk_label_set_mnemonic_widget       (GtkLabel *label,
                                                         GtkWidget *widget);
void                gtk_label_set_selectable            (GtkLabel *label,
                                                         gboolean setting);
void                gtk_label_set_text_with_mnemonic    (GtkLabel *label,
                                                         const gchar *str);
PangoAttrList *     gtk_label_get_attributes            (GtkLabel *label);
GtkJustification    gtk_label_get_justify               (GtkLabel *label);
PangoEllipsizeMode  gtk_label_get_ellipsize             (GtkLabel *label);
gint                gtk_label_get_width_chars           (GtkLabel *label);
gint                gtk_label_get_max_width_chars       (GtkLabel *label);
const gchar *       gtk_label_get_label                 (GtkLabel *label);
PangoLayout *       gtk_label_get_layout                (GtkLabel *label);
gboolean            gtk_label_get_line_wrap             (GtkLabel *label);
PangoWrapMode       gtk_label_get_line_wrap_mode        (GtkLabel *label);
GtkWidget *         gtk_label_get_mnemonic_widget       (GtkLabel *label);
gboolean            gtk_label_get_selection_bounds      (GtkLabel *label,
                                                         gint *start,
                                                         gint *end);
gboolean            gtk_label_get_use_markup            (GtkLabel *label);
gboolean            gtk_label_get_use_underline         (GtkLabel *label);
gboolean            gtk_label_get_single_line_mode      (GtkLabel *label);
gdouble             gtk_label_get_angle                 (GtkLabel *label);
void                gtk_label_set_label                 (GtkLabel *label,
                                                         const gchar *str);
void                gtk_label_set_use_markup            (GtkLabel *label,
                                                         gboolean setting);
void                gtk_label_set_use_underline         (GtkLabel *label,
                                                         gboolean setting);
void                gtk_label_set_single_line_mode      (GtkLabel *label,
                                                         gboolean single_line_mode);
void                gtk_label_set_angle                 (GtkLabel *label,
                                                         gdouble angle);
const gchar *       gtk_label_get_current_uri           (GtkLabel *label);
void                gtk_label_set_track_visited_links   (GtkLabel *label,
                                                         gboolean track_links);
gboolean            gtk_label_get_track_visited_links   (GtkLabel *label);
